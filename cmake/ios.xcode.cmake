set (
  IOS_ARCHS
  "armv7;arm64"
  CACHE STRING "ios_archs"
)

set (
  IOS_DEPLOYMENT_TARGET
  6.0
  CACHE STRING "ios_deployment_target"
)

# ---

macro (SET_ARCHS archs)
  set(VALID_ARCHS "")

  foreach (arch ${archs})
    set(VALID_ARCHS "${arch} ${VALID_ARCHS}")
  endforeach()

  set(CMAKE_XCODE_ATTRIBUTE_VALID_ARCHS "${VALID_ARCHS}")
  set(CMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH NO) # NECESSARY WHEN SEVERAL ARCHITECTURES MUST BE BUILT
endmacro()

macro (SET_DEPLOYMENT_TARGET deployment_target)
  set(CMAKE_XCODE_ATTRIBUTE_IPHONEOS_DEPLOYMENT_TARGET ${deployment_target})
  set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++") # NECESSARY, OTHERWISE libc++ WON'T BE USED ON OLDER DEPLOYMENT-TARGETS
endmacro()

# ---

set(CMAKE_MACOSX_BUNDLE YES) # NECESSARY, OTHERWISE add_executable() IN CMakeLists.txt WON'T HAVE ANY EFFECT

set(CMAKE_OSX_SYSROOT iphoneos)
set(CMAKE_XCODE_ATTRIBUTE_CODE_SIGN_IDENTITY "iPhone Developer")

SET_ARCHS("${IOS_ARCHS}")
SET_DEPLOYMENT_TARGET(${IOS_DEPLOYMENT_TARGET})

if (PROJECT_NAME STREQUAL "CMAKE_TRY_COMPILE")
  set(MACOSX_BUNDLE_GUI_IDENTIFIER foo.tmp)
  set(MACOSX_BUNDLE_EXECUTABLE_NAME tmp)
else()
  set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake") # NECESSARY, OTHERWISE cmake/MacoOSXBundleInfo.plist.in WON'T BE USED
  
  set(MACOSX_BUNDLE_GUI_IDENTIFIER foo.${PROJECT_NAME})
  set(MACOSX_BUNDLE_EXECUTABLE_NAME ${PROJECT_NAME})
endif()
